plugins {
    id 'org.springframework.boot' version '3.0.3'
    id "org.sonarqube" version "4.3.1.3277"
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'

jacocoTestReport {
    reports {
        xml.required.set(true)
        xml.outputLocation.set(file("${buildDir}/reports/jacoco.xml"))
    }
}

sonarqube {
    properties {
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco.xml"
        property 'sonar.junit.reportPaths', "${buildDir}/test-results/test"
    }
}

test {
    reports {
        junitXml.outputLocation.set(file("${buildDir}/test-results/test"))
    }
}

group = 'com.epam.edp'
version = '0.0.1-SNAPSHOT'

description = """"""

sourceCompatibility = 21
targetCompatibility = 21
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

bootJar {
    mainClass = "com.epam.edp.demo.DemoApplication"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            credentials {
                username = System.getenv('CI_USERNAME') ?: project.findProperty('nexusLogin') ?: 'defaultLogin'
                password = System.getenv('CI_PASSWORD') ?: project.findProperty('nexusPassword') ?: 'defaultPassword'
            }
            def defaultRepoUrl = 'http://nexus:8081/repository/krci-maven-snapshots'
            def releasesRepoUrl = project.findProperty('releasesRepoUrl') ?: defaultRepoUrl
            def snapshotsRepoUrl = project.findProperty('snapshotsRepoUrl') ?: defaultRepoUrl
            url = version.contains('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            allowInsecureProtocol = true
        }
    }
}

repositories {
     maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
}

jar {
    enabled = false
}
